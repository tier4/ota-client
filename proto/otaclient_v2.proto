// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/duration.proto";

//option java_multiple_files = true;
//option java_package = "io.common.ota.client";
//option java_outer_classname = "OtaClientProto";
option objc_class_prefix = "OTA";

package OtaClientV2;

// The OTA Client service definition.
// Style Guide: https://developers.google.com/protocol-buffers/docs/style#message_and_field_names
service OtaClientService {
  rpc Update (UpdateRequest) returns (UpdateResponse) {}
  rpc Rollback (RollbackRequest) returns (RollbackResponse) {}
  rpc Status (StatusRequest) returns (StatusResponse) {}
}

//
// Common
//
enum FailureType {
    NO_FAILURE = 0;
    RECOVERABLE = 1;
    UNRECOVERABLE = 2;
}

//
// Update
//

// Request
message UpdateRequestEcu {
  string ecu_id = 1;
  string version = 2;
  string url = 3;
  string cookies = 4; // json
}

message UpdateRequest {
  repeated UpdateRequestEcu ecu = 1;
}

// Response
message UpdateResponseEcu {
  string ecu_id = 1;
  FailureType result = 2;
}

message UpdateResponse {
  repeated UpdateResponseEcu ecu = 1;
}

//
// Rollback
//

// Request
message RollbackRequestEcu {
  string ecu_id = 1;
}

message RollbackRequest {
  repeated RollbackRequestEcu ecu = 1;
}

// Response
message RollbackResponseEcu {
  string ecu_id = 1;
  FailureType result = 2;
}

message RollbackResponse {
  repeated RollbackResponseEcu ecu = 1;
}

//
// Status
//
// Request
message StatusRequest {
}

// Response
enum StatusOta {
  INITIALIZED = 0;
  SUCCESS = 1;
  FAILURE = 2;
  UPDATING = 3;
  ROLLBACKING = 4;
  ROLLBACK_FAILURE = 5;
}

enum StatusProgressPhase {
  INITIAL = 0;
  METADATA = 1;
  DIRECTORY = 2;
  SYMLINK = 3;
  REGULAR = 4;
  PERSISTENT = 5;
  POST_PROCESSING = 6;
}

message StatusProgress {
  StatusProgressPhase phase = 1;
  uint64 total_regular_files = 2;
  uint64 regular_files_processed = 3;
  uint64 files_processed_copy = 4;
  uint64 files_processed_link = 5;
  uint64 files_processed_download = 6;
  uint64 file_size_processed_copy = 7;
  uint64 file_size_processed_link = 8;
  uint64 file_size_processed_download = 9;
  google.protobuf.Duration elapsed_time_copy = 10;
  google.protobuf.Duration elapsed_time_link = 11;
  google.protobuf.Duration elapsed_time_download = 12;
  uint64 errors_download = 13;
}

message Status {
  StatusOta status = 1;
  FailureType failure = 2;
  string failure_reason = 3;
  string version = 4;
  StatusProgress progress = 5;
}

message StatusResponseEcu {
  string ecu_id = 1;
  FailureType result = 2;
  Status status = 3;
}

message StatusResponse {
  repeated StatusResponseEcu ecu = 1;
}
