[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling>=1.20",
]

[project]
name = "otaclient"
readme = "README.md"
license = "Apache-2.0"
license-files = [
  "LICENSE",
]
requires-python = ">=3.8"
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = [
  "version",
]
dependencies = [
  "anyio>=4.5.1,<5",
  "aiohttp>=3.10.11,<3.13",
  "cryptography==46.0.1",
  "grpcio==1.70.0",
  "multidict<7.0,>=4.5",
  "msgpack>=1,<1.2",
  "otaclient_iot_logging_server_pb2 @ https://github.com/tier4/otaclient-iot-logging-server/releases/download/v1.3.0/otaclient_iot_logging_server_pb2-1.0.0-py3-none-any.whl#sha256:e5a2e6474a8b6f5656679877a5df40891e6a65c29830a31faed3d47d9973be60",
  "protobuf>=4.25.8,<6.33",
  "pydantic<3,>=2.10",
  "pydantic-settings<3,>=2.3",
  "pyyaml<7,>=6.0.1",
  "requests~=2.32",
  "simple-sqlite3-orm~=0.12",
  "typing-extensions>=4.6.3",
  "urllib3>=2.2.2,<2.6",
  "uvicorn[standard]>=0.30,<0.37",
  "zstandard<0.24,>=0.22",
]
urls.Source = "https://github.com/tier4/ota-client"

[dependency-groups]
dev = [
  "black>=24,<26",
  "coverage>=7,<8",
  "pre-commit>=3,<5",
  "pytest~=8.3",
  # pin pytest-asyncio to 0.23.8 for now,
  #   as 0.24 and newer will break the tests.
  "pytest-asyncio==0.23.8",
  "pytest-mock~=3.14",
  "requests-mock~=1.12",
  "ruff",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.hooks.vcs]
version-file = "src/_otaclient_version.py"

[tool.hatch.metadata.hooks.custom]
path = "scripts/hatch_build_lock_deps.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/tools",
  ".github",
]

[tool.hatch.build.targets.wheel]
exclude = [
  "**/.gitignore",
  "**/*README.md",
]
only-include = [
  "src",
]
sources = [
  "src",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_auto_indent = true
log_format = "%(asctime)s %(levelname)s %(filename)s %(funcName)s,%(lineno)d %(message)s"
log_cli = true
log_cli_level = "INFO"
testpaths = [
  "./tests",
]

[tool.black]
line-length = 88
target-version = [
  'py38',
  'py39',
  'py310',
  'py311',
]
extend-exclude = '''(
  ^.*(_pb2.pyi?|_pb2_grpc.pyi?)$
)'''

[tool.coverage.run]
concurrency = [
  "multiprocessing",
  "thread",
]
branch = false
relative_files = true
parallel = true
source = [
  "otaclient",
  "otaclient_api",
  "otaclient_common",
  "ota_metadata",
  "ota_proxy",
  "otaclient_manifest",
]
disable_warnings = [
    "no-data-collected",
    "module-not-measured",
    "module-not-imported",
]

[tool.coverage.report]
omit = [
  "**/*_pb2.py*",
  "**/*_pb2_grpc.py*",
]
exclude_also = [
  "def __repr__",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
skip_empty = true
skip_covered = true

[tool.pyright]
exclude = [
  "**/__pycache__",
  ".ruff_cache",
  ".venv",
  "venv",
  ".tests",
]
ignore = [
  "proto/**",
  "**/*_pb2.py*",
  "**/*_pb2_grpc.py*",
]
typeCheckingMode = "standard"
pythonVersion = "3.8"

[tool.ruff]
line-length = 88
target-version = "py38"
# NOTE: not include tests and tools for now
include = [
  "tests/**/*.py",
  "src/**/*.py",
  "pyproject.toml",
]
extend-exclude = [
  "*_pb2.py*",
  "*_pb2_grpc.py*",
]

[tool.ruff.lint]
select = [
  "E4",
  "E7",
  "E9",
  "F",   # pyflakes
  "Q",   # flake8-quotes
  "I",   # isort
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "ICN", # flake8-import-conventions
]
ignore = [
  "E266", # (too many leading '#'): sometimes we use multiple # for separting sections
  "E203", # (white space before ':'): this error conflicts with black linting
  "E701", # (multiple statements on one line)
  "S101", # (use of assert): mostly we use assert for typing
]

[tool.ruff.lint.pydocstyle]
convention = "google"
