# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import otaclient_v2_pb2 as otaclient__v2__pb2


class OtaClientServiceStub(object):
    """The OTA Client service definition.
    Style Guide: https://developers.google.com/protocol-buffers/docs/style#message_and_field_names
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Update = channel.unary_unary(
            "/OtaClientV2.OtaClientService/Update",
            request_serializer=otaclient__v2__pb2.UpdateRequest.SerializeToString,
            response_deserializer=otaclient__v2__pb2.UpdateResponse.FromString,
        )
        self.Rollback = channel.unary_unary(
            "/OtaClientV2.OtaClientService/Rollback",
            request_serializer=otaclient__v2__pb2.RollbackRequest.SerializeToString,
            response_deserializer=otaclient__v2__pb2.RollbackResponse.FromString,
        )
        self.Status = channel.unary_unary(
            "/OtaClientV2.OtaClientService/Status",
            request_serializer=otaclient__v2__pb2.StatusRequest.SerializeToString,
            response_deserializer=otaclient__v2__pb2.StatusResponse.FromString,
        )


class OtaClientServiceServicer(object):
    """The OTA Client service definition.
    Style Guide: https://developers.google.com/protocol-buffers/docs/style#message_and_field_names
    """

    def Update(self, request, context):
        """
        `Update` service requests OTA client to start updating.
        The OTA client of each ECU retrieves the request that matches its own ECU
        id and starts it. Requests to each ECU included in the `UpdateRequest` are
        handled by that respective ECU and returns the response to the parent ECU.
        Main ECU merges the responses as UpdateResponse.
        After requesting `Update` and if the OTA status is `UPDATING`, the request is successful.
        Note that if the child ECU doesn't respond, the grandchild response is not
        included by `UpdateResponse`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Rollback(self, request, context):
        """
        NOT YET
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Status(self, request, context):
        """
        `Status` service requests OTA client to retrieve OTA client status.
        Note that if the child ECU doesn't respond, the grandchild response is not
        contained by `StatusResponse`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_OtaClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Update": grpc.unary_unary_rpc_method_handler(
            servicer.Update,
            request_deserializer=otaclient__v2__pb2.UpdateRequest.FromString,
            response_serializer=otaclient__v2__pb2.UpdateResponse.SerializeToString,
        ),
        "Rollback": grpc.unary_unary_rpc_method_handler(
            servicer.Rollback,
            request_deserializer=otaclient__v2__pb2.RollbackRequest.FromString,
            response_serializer=otaclient__v2__pb2.RollbackResponse.SerializeToString,
        ),
        "Status": grpc.unary_unary_rpc_method_handler(
            servicer.Status,
            request_deserializer=otaclient__v2__pb2.StatusRequest.FromString,
            response_serializer=otaclient__v2__pb2.StatusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "OtaClientV2.OtaClientService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class OtaClientService(object):
    """The OTA Client service definition.
    Style Guide: https://developers.google.com/protocol-buffers/docs/style#message_and_field_names
    """

    @staticmethod
    def Update(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/OtaClientV2.OtaClientService/Update",
            otaclient__v2__pb2.UpdateRequest.SerializeToString,
            otaclient__v2__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Rollback(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/OtaClientV2.OtaClientService/Rollback",
            otaclient__v2__pb2.RollbackRequest.SerializeToString,
            otaclient__v2__pb2.RollbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Status(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/OtaClientV2.OtaClientService/Status",
            otaclient__v2__pb2.StatusRequest.SerializeToString,
            otaclient__v2__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
