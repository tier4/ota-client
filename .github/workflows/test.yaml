name: test CI

permissions:
  contents: read
  packages: read
  actions: read

on:
  pull_request:
    branches:
      - main
      - v*
    types:
      - opened
      - synchronize
      - reopened
      # NOTE(20241016): this is a workaround for PR with head
      #   updated by gen_requirements_txt workflow
      - review_requested
      - assigned
  push:
    branches:
      - main
      - v*
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yaml"
  # allow the test CI to be manually triggerred
  workflow_dispatch:

jobs:
  pytest_directly_on_supported_os:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        test_base:
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-22.04
    steps:
      - name: Checkout commit
        uses: actions/checkout@v5
      - name: Execute pytest with coverage trace under ota-test_base container
        run: |
          mkdir -p test_result
          docker compose -f docker/test_base/docker-compose_tests.yml run --rm tester-${{ matrix.test_base }}

  # NOTE: we only intend to test otaclient with python3.13 on
  #       ubuntu 22.04, as this is the setup for the otaclient app image build.
  pytest_with_py313_on_ubuntu_2204:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout commit
        uses: actions/checkout@v5
        # sonarcloud needs full git histories
        with:
          fetch-depth: 0
      - name: Execute pytest with coverage trace under ota-py313-app container
        run: |
          mkdir -p test_result
          docker compose -f docker/test_base/docker-compose_tests_py313.yml run --rm tester-ubuntu-22.04
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
