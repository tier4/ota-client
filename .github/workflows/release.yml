name: Release CI

permissions:
  contents: read
  packages: read
  actions: read

on:
  release:
    types: [published]
  # allow manually triggering the build
  workflow_dispatch:

jobs:
  build_python_packages:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      OTACLIENT_WHL: ${{ steps.set_env.outputs.OTACLIENT_WHL }}
      OTACLIENT_VERSION: ${{ steps.set_env.outputs.OTACLIENT_VERSION }}
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup python
        uses: actions/setup-python@v5
        with:
          # use the minimum py ver we support to generate the wheel
          python-version: 3.8

      - name: install build deps
        run: |
          python -m pip install -U pip
          python -m pip install -U hatch

      - name: build otaclient package
        env:
          # NOTE: see hatch_build_lock_deps.py for more details
          ENABLE_DEPS_LOCKED_BUILD: "yes"
        run: |
          hatch build -t wheel

      - name: set environment variables
        id: set_env
        run: |
          OTACLIENT_WHL=$(basename $(ls dist/otaclient-*.whl))
          # Remove everything after '+' to clean Git metadata
          OTACLIENT_VERSION=$(hatch version | cut -d'+' -f1)
          echo OTACLIENT_WHL=${OTACLIENT_WHL} >> $GITHUB_OUTPUT
          echo OTACLIENT_VERSION=${OTACLIENT_VERSION} >> $GITHUB_OUTPUT

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-python-packages
          path: dist/*.whl

  build_squashfs_images:
    needs: build_python_packages
    strategy:
      fail-fast: false
      matrix:
        platform: [x86_64, arm64]
        include:
          - platform: x86_64
            base_image: ubuntu:22.04
            runs-on: ubuntu-latest
          - platform: arm64
            base_image: arm64v8/ubuntu:22.04
            runs-on: ubuntu-latest-arm64
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: build squashfs image for ${{ matrix.platform }}
        uses: ./.github/actions/build_squashfs_image
        with:
          platform: linux/${{ matrix.platform }}
          platform_suffix: ${{ matrix.platform }}
          base_image: ${{ matrix.base_image }}
          whl: ${{ needs.build_python_packages.outputs.OTACLIENT_WHL }}
          version: ${{ needs.build_python_packages.outputs.OTACLIENT_VERSION }}
          output_squashfs: dist/otaclient-${{ matrix.platform }}-v${{ needs.build_python_packages.outputs.OTACLIENT_VERSION }}.squashfs

      - name: build patches
        uses: ./.github/actions/build_patches
        with:
          platform_suffix: ${{ matrix.platform }}
          version: ${{ needs.build_python_packages.outputs.OTACLIENT_VERSION }}
          squashfs: dist/otaclient-${{ matrix.platform }}-v${{ needs.build_python_packages.outputs.OTACLIENT_VERSION }}.squashfs
          output_dir: dist

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-squashfs_${{ matrix.platform }}
          path: |
            dist/*.squashfs
            dist/*.patch

  post_build:
    runs-on: ubuntu-latest
    needs: [build_python_packages, build_squashfs_images]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: download python packages artifact
        uses: actions/download-artifact@v5
        with:
          name: artifacts-python-packages
          path: dist

      - name: download squashfs x86_64 artifact
        uses: actions/download-artifact@v5
        with:
          name: artifacts-squashfs_x86_64
          path: dist

      - name: download squashfs arm64 artifact
        uses: actions/download-artifact@v5
        with:
          name: artifacts-squashfs_arm64
          path: dist

      - name: generate manifest
        uses: ./.github/actions/generate_manifest
        with:
          dir: dist
          output_manifest: dist/manifest.json

      - name: calculate checksum
        uses: ./.github/actions/calculate_checksum
        with:
          file_patterns: '*.{whl,squashfs,patch,json}'
          directory: 'dist'

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-manifest
          path: |
            dist/manifest.json

      - name: publish release artifacts
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.squashfs
            dist/*.patch
            dist/manifest.json
            dist/*.checksum
